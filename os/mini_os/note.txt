## 2. 3. 课程讲解
	boot -> loader -> kernel -> shell -> 应用
	kernel: 即内核。包含：多进程 中断管理 设备管理 文件系统 存储管理 进程同步 系统调用
	系统设计目标：完成从引导程序，到系统内核，再到应用程序的全部设计。
	目标：OS理论 + CPU体系结构 + 开发工具链 + 软件设计技巧 + 系统设计策略 
	仅仅是看一些linux0.11源码，体会不到OS设计的秒。

	课程顺序：
	boot+loader 引导程序
	支持多进程运行 基础内核
	带保护的内核 支持内存分页与进程保护
	支持进程的动态加载与退出 带shell的内核
	带文件系统的内核 支持设备文件系统和FAT16文件系统

	先讲本节代码需要用到的理论，硬件也会讲点，学了马上用。
	还有配套的文档，课件。
	前置知识：熟练掌握C，汇编写过程序

	学习方法：看视频 + 看文档 + 写代码 + 写笔记发博客 + 群内讨论

	前置工具：编译器 模拟器(真实电脑测试比较麻烦) 辅助工具 IDE 
	编译器： GCC编译器，用于编译C源代码 
			GDB调试器：连接PC模拟器调试程序
			Binutils工具集：汇编器、ELF文件解析、反汇编等工具

	IDE: VScode + cmake(方便对源代码编译管理的控制，后面讲工程会说的) 

	PC模拟器：用于对PC机运行环境的模拟，这样不必使用真机，选用的是qemu 

	附加工具主要用于磁盘映像进行读写：比如dd命令 Winhex Diskgenius等

## 4. 配置环境




