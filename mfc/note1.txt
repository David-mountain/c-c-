	6-09：
	项目：写字板 画笔 
	VS本地帮助安装
	MFC知识体系 自己找
	数据类型的typedef重定义 
	很多历史包袱 16位OS 有些命名
	冗长的语法，简单的实际东西
	一个完整的流程 MFC
	888L 历史包袱 
	分离高位 低位 & n 0f-low f0-high 算哈
	案例：已有窗口 点击删除 弹出另外一个窗口 是否删除

	setWindowText get move 
	FindWindow
	Message 展示BOX  / DialogBox 可录入BOX

	windows资源有。

	6-10
	导入icon图 资源视图-VS
	DialogBox 形参4个 返回值是整型
	INT_PTR 平台型整型 32  64对应 4 8 像指针
	切勿陷入自己的笔记中，多用知识，记住反馈，更正知识
	theProc 处理消息的回调函数
	常用消息20个多个，共有300多个 WM_
	我以前总是无法相同阶级跃迁这玩意，突然晚上通了
	自己开发控件 
	拆分参数 & 理解哟
	轮询

	消息汇总
	属性汇总

	头文件
	源文件
	资源文件

	事件与消息
		
	6-12
	多字节 + 窗口 VS设置
	围绕资源开发 其实和前端一样的 没啥区别
	也就是对应组件，围绕组件开发，
	Dialog 这个资源的属性 第二个参数称之为模板 样本
	资源受.rc文件管理
	资源的属性有哪些 居中等等

	学数学，尤其是难点，看看别人的学习博客，如何搜索是关键
	API汇总 里面每天学习10个 ->
	句柄(索引)分类 数据类型分类
	宏 深入理解  宏调用返回字符串 # ##区别
	三种坐标管理结构体 
	输出型参数
	居中原理 
	矩形窗口  getRect 讲的是居中框框 
	禁用窗口API EnableWindow
	最大化 最小化
	有些看上去很简单的问题实际上确实很复杂。
	三木 处理布尔时候 用取反也可以

	计时器 动画
	浅下陷 深下线 静态
	接收文件
	记事本

	6-13
	测试每个属性
	INT_PTR返回值 API学习
	SetTimer其他API -案例矩形挪动
	Onxx()命令 消息回调函数
	drapqueryfile() 查询拖入文件的函数
	dragFinish()
	无限累加，累加？
	strcat用之前清0 {}c11
	多行属性-
	对齐方式等
	默认是ctrl+回车 设置了什么属性就可以回车换行了
	纯数字的 输入框
	记事本 拖入 内容显示到框框中
	昨天是窗口属性汇总
	自动换行 滚动条
	另存为ANSI 没有乱码了 ！！本周主题
	Unicode转码问题
	utf 的文件头是什么
	utf-16的文件头是什么

	卷积：延迟 倍率 叠加 
	如何解决问题 这个过程重要 PPT也重要阿 二合一

	几次了之所以报错，是因为没有修改属性设置MFC的
	而且报错千奇百怪的

	拖入 我得无法 关闭 通过右上角的×
	先是拖入文件 只显示标题 然后显示文本内容
	控件ID 始终是未定义的

	API:
	GetWindowRect(hwnd, &rect)
	MoveWindow(hwnd, rect.left + 2, rect.top, nWidth, nHeight, FALSE)
	SetTimer(hwnd, 1, 200, NULL) 不提供回调函数地址，走默认消息事件 WM_TIMER

	6-14
		unicode转换 文件识别
		记事本 拖入文件
		添加图标 如果添加多个，结果？ 采用第一个ID最小那个
		文本如何设置UTF16等格式？另存为，选格式
		字符编码和大端小端的联系？
		宽字节-都是2个字节了。
		ANSI UNICODE16 8 ？
		多字节 窄字节 宽字节
		文本文件编码识别？
		即使忘记了，能够自己得出答案也是可以的
		不同文件的编码格式，相应解码
		编码转换API？
		第一节课 识别
		第二节课 转码
		bug: 0结尾？ 2个字节 置0
		UTF8->Unicode->ANSI 
		utf8算法规则？ 3 2 1等字节
		位运算高10位的判断？
		反向工程？
		wchar* wc
		多字符集记事本->unicode版本？
		微软多用MFC等--UTF16 而mysql 前端后端多用utf-8

		课下看：
		检查是否是utf-8

		大小端转换
		unicode -> ansi 
		utf-8 -> unicode
		utf-8 -> ansi 

		不同字符编码的头(有的没头)：
		case 0xFFFE: utf16?大端
		case 0xFEFF: utf16?小端
		case 0xBBEF: utf8

		ansi进来没有头，进来就是内容
		多字节: ansi utf8 窄字节
		utf16 大小端都是宽字节
		视频中教学遇到bug: 宽字节的结尾符 也就是两个字节都要变成00才行

		文本文件编码识别：
		1.ANSI没有头部标识
		2.U16大端和小端的头部标识：0xFFFE 0xFEFF
		3.U8的头部标识：0xEF BB BF 
		3-6min

		想起之前有个选择了哪些的 位&运算。别忘了
		
	6-15
		TCHAR类型
		窄字符串 宽字符串 自适应字符串
		源码那个MFC
		MFC架构 和简单的弹出框框
		位运算
		1 2 4 8.。
		为什么自动转换，因为operatro造成的 const char* 重载

		后面不再使用 ANSI 多字符集编码了，使用unicode*
		先有utf16->后面有utf8(软件多用)
		微软主要采用utf16
		unicode软件开发 API名字都变了些
		微软跟字符串打交道的API都会定义两套
		MFC 从windows32过度到mfc 
		afx-*开头的是MFC 一个组织 
		平台框架-MFC 基于windows的框架 
		window32到通过添加类 转到mfc
		MFC-咋变成使用UNICODE了

		源码： 必须熟悉一个 使用类封装的框架的源码！！！
		一个类关联一个对话框！右键资源-类向导

		所有的窗口类都由CWnd类同一的窗口基类派生
		CWnd类内部有核心成员变量HWND，就如同CSockeet类内部有核心成员m_socket
		CWnd类几乎封装所有跟HWND打交道的API

		CString str;
		str.Format(L"x=%d,y=%d", point.x, point.y);

		位运算 -- 带进来的参数是一个混合变量，之前说过的3种位运算，

		LPCTSTR - const wchar_t* 如何转成*指针的？
		是做了一个运算符重载 operator
		
		有没有什么可提取视频语音的工具！！
		
	6-16
		正式进入MFC
		MFC-win32对比 
		全局变量 全局区 后面不再添加全局的
		有业务全局函数都放在类内 static形式的
		MFC化记事本
		宽版函数 窄版函数 自动转函数
		列表控件 下拉控件 本周可以开发单机版
		list Box list control
		都可以试试
		虚拟列表 大批量数据展示 列表展示
		Message也被重新封装了
		CListCtrl类 
		员工管理系统

		回看：
		手动建MFC：三个设置(静态中使用MFC unicode 窗口) 新建资源 改名资源控件ID 添加类 基类是CWinApp 其他名字自取 改改类内容
		两个类启动类 消息监听类(现在的事件回调 变成了一个个成员函数的调用)
		MFC-改造拖入文件功能
		新建MFC：
		应用程序类型：基于对话框 在静态中使用MFC
		用户界面功能：关于框 去掉√
		生成的类：Dlg 
		combo Box下拉框
		日期控件 格式：长日期
		sysListView LVS_* 属性的集合
		排序 列表控件 红绿很多颜色那个
		视图 大图标 小图标 详细列表等
		单行选择 
		控件页面 然后可以弹出看看 点击 扩展下面右边那个
		编辑标签 ？中间的不行
		海量数据列表属性 按需加载 虚拟列表

		GetDlgItem(控件ID)
		在列表控件中插入一列数据 手动版(::SendMessage) API版
		MFC对每一个控件都封装了一个类
		不同的控件不同的类管理，不同的类有不同的操作
		API版 p->InsertColumn(0,..)
		
		单机版项目 
		3集-20min 介绍 CListCtrl类 跳

		间距相等 帮助下面一排都是相关文本属性
		下面展示的是 list control
		设置两次 大图标 小图标 不知道为什么
		添加类向导 
		c语言字符串 c++字符串
		用着记，
		尾部插入 

		大致总结：
		初步MFC 搞了个后台形式的demo
		一个控件一个类，每个类操作有所不同
		某些函数的所需结构体的介绍
		某个类的重点成员函数介绍
		icon图的设置 
		
	6-17
		本周单机版的项目
		虚函数 初始化函数 相当于回调回来？
		icon的换
		双击控件的资源 建立消息映射函数
		三种方法创建消息映射
		正常来说，字符串要用const string &str，但是你要不用也可以，里面有完美转发，速度也不慢把
		查找是否存在函数，考虑是否返回第几个，还是布尔值
		2 底层IO函数 fopen的windows底层调用API CreateFile
		linux下，都是open
		常见的底层IO函数：open close read write seek 
		createFile不知能打开文件读写，还能打开串口和并口等外部设备读写
		串口读写 上位机基本功
		windows通讯的串口通讯
		MFC CFile类 封装了open底层IO
		保存功能 
		struct SData
		{
			CString m_sa;
			..
		} 这种无法保存数据 string类 是指针
		这种数据在结构体外部 不行的
		3 字符串注意宽版 窄版 自动版
		公共头文件 那个#define提示 必须放在这里面
		pch.h 所有的最上面
		加载放在insertColumn之前会有什么影响？
		现有这行，再平铺数据
		删除 单行 多行 
		clistCtrl获取多个选中的方法 至少3种方法
		完整删除的算法 教学中演示了漏了 
		4 ::fn() 指全局函数 域符号 
		数据库化 设置vs++目录 mysql.h放哪里比较好 pch.h 
		然后就是连接connect 数据库来的都是窄的，_bstr_t str = *row++ 自动处理转换窄的

		看代码：
		extern CApp theApp; 这不是导出 相成前端代码了 应该是后面使用 变成了全局的
		一个控件就是对应一个类
		你看他的命名 最主要的那个窗口 是CMainDlg
		每个生成的类中 有很多不认识的扎齐扎巴的代码 影响我观看代码 主要不知道是做什么的 
		这里就使用到了protected public 的具体场景，对于业务中的使用并不熟练
		virtual BOOL OnInitDialog(); 我不是很理解 
		str.Format(L"%d", d.nNumb);//sprintf
		全部遍历 已知长度 可以while(nCount--)
		str += L" "; 这个写法有意思 故意加空
		虚函数 多态确实要重新看看 巩固哈
		一个是本地单机版 一个是mysql版本
		如何导入icon图 ??
		是一个控件一个类，不对，应该是一个窗口一个类！！！
		-1 0xffff ffff 记住了 

		c11 bind 
		看mysql代码 记录：
		新建数据库 的流程
		链接器 输入 libmysql.lib
		或者 是pragma 导入进来？想起来了
		
	6-20
		标志位 开关 32位即不能超过32个开关
		GetItemState
		TRACE 即cout 
		焦点行只有一行
		删除 -- 倒着删除可以避免串动
		while (true)
		GetItemNext 
		源码是要断点进入 试试
		TCHAR类型 
		常量的
		宏 # ## 之前学习过 现在还是有点忘记了
		ANSI 多字节 LPCSTR p = "abc"
		unicode LPCWSTR str = L"abc";
		cplusplus wstring 有提供
		TCHAR是微软的发明 不是C++的
		const TCHAR* tstr = _T("abc")
		const TCHAR* tstr = _TEXT("abc")
		后面就使用两个了，不再使用L版本的了
		改成unicode 多字节都适应
		_bstr_t 进去窄的出来宽的 反之成立

		备份数据库 
		data export 选择worker 导出目录选择
		然后对应文件找到 .mysql文件
		再次强调整理c string 
		一鼓作气
		import 刚刚的sql
		打断点看参数 ！！！~
		直接控件加基类
		重排焦点位置 快捷键？Ctrl+D
		int(f)构造 c不支持
		

		文件版本 mysql单机版本 网络协议版本
		窗口 子控件 控件
		CString 出入口 窄版 宽版 explicit禁止使用=号 在MFC unicode中正常都是宽版
		但是当你+= 出来还是窄版
		MFC 表单处理 拦截按键事件 不让显示非法输入 

	6-21
		把win32的基础框架代码 写一遍 
		sprintf(s, "%s". s1); s1必须是窄的 宽的不行 wchar_t s1[] = "ad#";
		T版 W版就是L版
		除了vc++还有啥
		sprintf 宽窄转换 只限于英文 中文不行 微软的
		不是C++标准？ GCC 
		检测泄漏函数
		W2A A2W(前面必须有据代码 using...) ..
		宽窄转换 几种方式
		_bstr_t 封装类 看源码头
		CString 可以看到源码 双入口 单出口 有部分转换能力 
		LPCSTR const char* 
		try catch 弊端 之前说过 忘了

		GetWindowText(str)
		看教学中是如何对一个知识点研究的 
		对齐线 把常用的控件放在工具箱最上面 可拖
		combo box 混合框
		可在控件中 预览 窗口下面
		海量数据 显示问题 测试 虚拟列表
		mysql同时访问是150好像
		HWORD LWORD 
		combobox 隐藏数据？
		获取类的指针 强转
		框框的焦点 SetFocus() 
		其他的功能点自己写 

		回顾：
		进步本
		W2A A2W sprintf 涉及宽版字符和窄版字符的隐式转换和显式转换 
		正则 表单验证 
		
	6-22
		回想之前的file win32拖进去的 忘记 把之前的复习
		矩形类 然后平面移动方法 看类源码
		.h类throw()？ 
		对象转指针 形参处理 
		crect实现
		基类指针 等这些语法概念的理解
		清零 汇编级的清零无法触发教学中
		点进去多看看这些类有哪些方法？
		GetDlgItem是基于当前窗口类的 
		TRACE()使用
		下周CWnd类详细
		获取主窗口的消息 被控件拿走了
		光标切换消息 
		进步本
		GetDlgItemText 获取窗口控件文本
		添加弹框 之后会更新主窗口列表 涉及类指针！
		添加一个窗口类 回显 涉及到一个doModal阻塞区间句柄才有？

		#include <atlrx.h>
		#pragma comment(lib, "atl.lib")
		
	6-23
		昨天 坐标系转换 不统一时候
		静态库 动态库 区别？
		光标在哪个地方运动 WM_*
		OnSetCursor 
		区分窗口 GetDlgCtrlID
		OffsetRect moveWindow
		ScreenToClient 
		上面都是练习 加工资的案例 引发的

		句柄 ID
		getClientRect 
		getWindowRect
		RECT 
		10:20 - 10-34

		封装这个类 CRect 压缩膨胀等纠正 
		继续项目 接着修改功能
		回显时候日期的问题 找另一个类 时间类
		int n(); 这样写是一个函数 int n; n({}这样是变量  
		n = 0; 
		句柄在domal之前是没有生成的 阻塞的？
		两套时间类？ 时间算法 .之前是日期 之后是啥 自己扩展
		c localtime...
		COM CWindow类
		COletime
		32位时间 2038就找了 现在默认都是64位了

	6-24
		静态链接 动态链接？
		学了哪些类
		扩展 愿意扩展 贪心
		涨工资按钮 截获控件消息 
		回车 输入框跳转 但是现在是结束了输入
		设置背景色 类  
		RGB颜色基础 
		位图 
		MFC每个目录都是做什么的 初始化库时候

		MFC 两个列表覆盖了
		MFC对win32 api的封装，我要把api有个大致的分类，然后再看它是如何封装的，封装了哪些类？ 然后再具体填充
		我添加资源 新建类没有virtual BOOL InitInstance(); ？？

	6-25
		平行数据 数据库+代码内的缓存数据
		#include "" 与class xxx; 两者 使用后者因为怕前者相互包含
		传this 调用刷新+
		CDialog窗口类讲解
		
		1-
		MFC 200多个类 学常用的50个
		不熟悉的类 回头多看看
		CS架构
		CDialog 三大重要虚函数 mfc接管
		之前接管走默认是 回车关闭窗口了 不想这样
		如何吧别人的资源快速导入，右边-添加-现有项 ctrl+拖动 否则就是剪切
		Resourse.h 看看这玩意的内容 资源拖动，这里的编号也会进来当前项目
		2. Server代码挪动
		数据库出来的是ANSI? UNOCODE
		反射性消息 控件消息就是反射消息 带N的都是反射性消息-类添加中
		基础消息 不同控件的消息就是反射消息
		鼠标移动等进入控件就会被控件带走 主窗口无法收到 截获控件消息不得不建立派生类子类化
		MFC为了更方便主窗口收到消息，吧控件的消息合成高级消息反射给主窗口 Notify
		见到 BN_EN_LVN_HD都是反射性消息
		名字排序-字符编码 点击某列头排序
		ANSI按拼音排序  UNICODE不是？？不对吧
		单机版(不联网版本) 网络协议版
		单机版软件：只能在一台计算机上运行，不需要联网，就能运行
		平行数据 尽量不用 
		一个资源两个类？
		派生类 基类 的转换 this
		
	6-27
		afx-* 全局函数
		学而不思则罔，思而不学则殆
		道 术 
		CWinApp类 
		执行力 
		配置属性- 调试 命令参数 
		CApp CWinApp
		服务器需要ANSI型字符串
		黏包解决方案 
		不接受长度 直接接收？
		修改 账号登录 
		ICON图设置
		使用 afxMessageBox了，不用原来的messagebox了 因为封装的更加好

		#pragma comment(lib,"libmysql.lib") 
		

	6-28
		1
		回看： CWinapp类
		regedit 注册表
		注册表作用：
		1.系统配置和很多软件的配置数据
		2.注册表内数据主要分为5大类：
		size消息 尺寸监听
		时时刻刻放防止 空指针。
		MoveWindow()
		QT演示，
		2
		添加别人的资源 在我得项目中
		它们都是 右键 - 记事本打开 很多不同扩展名的文件
		菜单 记事本咋搞出来的阿？ ！！！
		CWinApp 
		OnDestroy 生命周期函数 将要销毁前
		OnInitDialog 生命周期函数 初始化 窗口类销毁
		写道注册表里去了 m_pszRegistryKey 
		这里 20min -- 


		配置文件和注册表 记事本项目
		3
		读取注册表 结构体
		客户区的 外壳的
		没有触发movewindow 
		:: 打破壳的破解
		搜索软件 Everything 
		默认路径名 存放
		配置文件 不同的机器不同的板卡 可能需要配置不同的参数
		CWin app读写配置
		icon图换
		cursor 光标 
		很多定义类型不熟悉 没有整理 当初听也是不认真
		图标 光标
		被控件拦截了，
		下周记事本-中型项目
		7月份 GDI彩色绘图

		建表相关操作就有问题
		mysql相关东西基本类型都不知道了 忘记了
		客户端：最开始会生成两个头.h 
		一个是CAPP那个 一个是主窗口那个(第一个默认窗口那个)
		根据UI -> 窗口 -> 类 
		资源改名 
		pList->SetExtendedStyle(LVS_EX_GRIDLINES | LVS_EX_FULLROWSELECT); 才能选中行
		void CWorkerDlg::Refresh(int nOrder) 形参的封装意义
		突然想起 全局的变量的好处 尤其是一些配置 可能会变的 
		struct SInfo
{
	int nNumb;
	char sName[20];
	float fSala;
	char sDate[20];
};	这个命名真的很不错
		struct union TCP 黏包问题 别人的思路，如何解决这个问题的，不管是否正确 运用所学知识解决这个问题 还有就是联合体的使用很妙 学习
		虽然可能浪费内存情况 占用点带宽 也是思路
		

	6-29
		昨天的注册表几节课
		少两节 
		3
		！！ spy++测试 可以看到很多 辅助开发理解UI 看别人用的什么UI控件
		1-1 pList指针？
		static_cat(flaot or int)
		reinterparet_cat<指针类型>
		登录框的密码隐藏框 置顶 setWindowPos
		位图 
		
	6-30
		1
		CWnd类继续介绍 讲了好几天阿 重点阿！
		2
		CButton类 又是一大堆的#define 。。宏
		通用属性 
		突然想起MFC 宏使用较多 性能问题
		可变参数 C语言的重载 结合 宏
		CCombbox 下拉
		css canvas 底层是C++吗？
		图标和位图是不一样的 图标.ico 位图.bmp 
		位图的设置 
		CButton挂载了很多方法 看看 测测

		施磊 + 点乘音视频流媒体 + 51的多游科技opengl + 老汤的内功心法
		课程王键位CPP(有施磊全套+老汤的内功心法+李述铜+零声课-居然还有个面试的课零声+多游全套+比特106)
		codehwye课A(朝夕教育 上面多游科技全套)
		three.js属于 三维？opengl?
		opengl opencv 区别忘了
		opencv 图像到数据
		opengl 数据到图像

	7-1
		昨天视频没有拷贝
		cbutton类 cwin类 
		下周系统对话框类
		MFC 类架构图 下周Dialog Boxed子类等
		http://www.cppblog.com/andxie99/archive/2008/06/04/9747.html
		博客园是个好东西 还有github 可以看到很多以前的老程序员的发展
		FindWindow();
		CWin类 继续 卧槽几天了 重要阿 ！！！
		SetOwner 

		窗口一个句柄 一个对象指向 一对一的 昨天说过
		pWnd ->m_hWnd
		pWnd ->GetSafeHwnd();
		CWnd wnd;
		HWND h = wnd;
		系统不定期清理Map 不要全局保存

		嫁接句柄 与 子类化
		destroy 将要销毁前
		GetDlgItem以后不再使用了 使用嫁接 Attach 配合 detach
		调试手段： 调用堆栈中找 之前有个视频说过
		向下翻 找到自己的函数

		控件带走了消息 主窗口收不到
		《完美沟通》 练习口才
		截获控件消息，都要通过子类化来实现 SubClassWindow

		想接收控件的基础消息，必须做一个派生类，子类化！！！
		昨天是穿透 
		4种方法，子类嫁接
		sendMessage postMessage

		子类化重要
		
	7-03

	7-04
		看看书的目录结合代码 
		计划继续进行
		CWnd类核心类 讲解完毕了 然后就是其他控件类
		系统消息和用户消息昨天讲的 
		进程之间的数据通信 
		消息发送 
		关键变量 - 不再使用GetDlgItem..
		参数可是一个结构体 或者 拆成多个参数
		也许一个win32 api 在MFC中封装了很多方法 
		
		面试题： SendMessage PostMessage 区别
		PostMessage 不强迫，不会等着你去操作，不阻塞
		SendMessage 直接弹出停在那里，等你操作，阻塞
		更严格的定义和区别 放入消息队列中
		异步 同步 的 
		串行 并行执行 
		https://blog.csdn.net/u014712365/article/details/117684574
		区别1：返回时间不同
		区别2：返回值不同
		区别3：同步和异步问题
		区别4：发送中的过程不同
		用sleep来测试 异步同步确实是办法 即转化了
		之前的数学思想 八个 用纸写出来 记住
		坑才多了就好了

		数学的四大思想八大方法：--
		数形结合 转换/划归 分类讨论 整体 
		配方法 因式分解 待定系数法 换元法 构造法 等积法 反证法 判别式法
		常用数学思想：--
		建模思想 统计思想 最优化思想 转换与划归思想 类比思想 分类思想 整体思想 数形结合思想 方程思想 函数思想 
		我的这种让我想到了一个点，不告诉你这些思想，你自己能不能总结出来，总结出一个高度凝结的单词

		数学思想是对数学知识和方法本质的认识，是建立数学和用数学解决问题的指导思想，是解决数学问题的根本策略，它直接支配着数学的实践活动。数学方法是解决问题的手段和工具，是解决数学问题时的程序、途径，它是实施数学思想的技术手段。
		转化思想，提高学生分析解决问题的能力。
		数形结合的思想方法，提高学生的数形转化能力和迁移思维的能力。
		分类讨论的思想方法，培养学生全面观察事物、有条理的处理问题的能力。
		建模思想使学生更有思想，方法形成正确的数学态度。

		这里就对比到了，win linux二者的SDK是不一样的
		SDK API
		线程启动的多种方式 底层API是没有改变的 水深 
		资源管理器--查看进程--可以右键 进程等级 设置
		我还发现了，我在说一个阻塞 非阻塞的问题，描述就有问题，不清楚，想起了孙总对我说的，沟通应该如何沟通，想想 ！
		面试题：cdel stdcall 区别 ?
		stdcall pascal 联系？pascal格式
		异步拿结果呢？
		Timer事件 定时器
		js是单线程的 
		一加一减的线程演示 应该会奔溃 估计是win内核做了保护机制
		QT也是如此，踩坑之子线程不能操作UI
		3
		CCommonDialog
		TRACE()
		最大化 最小化 SysCommand 不关闭 托盘技术
		简化版消息 close 
		取消关闭的多条路径 进入到destory就不能取消了
		IsIconic 最小化 
		4
		CFileDialog
		记事本 新建--实际是启动进程 进程启动方法
		对话框类 及其子类 
		文件名 和 扩展名
		OFN-* 大部分没有用了
		过滤器 可以放在全局区

		晚上复习：
		我发现使我的听课问题，还是教学的问题，总感觉很多东西遗漏了，似乎就感觉没有上过课，完全没听过。
		--
		只需将参数类型从 LPCSTR 更改为 LPCTSTR 原来后者是T版的 才明白这个取名的意思
		auto p = FindWindow(_T("NotePad"), NULL);？第一个参数窗口的类名？不太明白在哪里
		SendMessage 用于在 Win32 程序中发送消息给窗口
		LRESULT SendMessage(
		    HWND   hWnd, 指向接收消息的窗口句柄。
		    UINT   Msg, 要发送的消息代码。
		    WPARAM wParam, 与消息相关的参数，
		    LPARAM lParam 与消息相关的参数，
		);
		原来有了消息之后，不用再调用父窗口的指针写法了
		那我发送一个刷新列表的 消息呢？
		mfc afx_msg void OnSysCommand(UINT nID, LPARAM lParam);  OnSysCommand 函数的作用是允许程序员控制和处理窗口的系统命令消息
		BringWindowToTop 窗口顶层置顶
		SetForegroundWindow 将指定的窗口前台置顶
		FlashWindow 用于闪烁指定窗口的任务栏图标或者整个窗口
		GetWindow 
		FindWindow
		GetDesktopWindow 用于获取当前桌面窗口的句柄
		
	7-05
		预告：托盘 进程启动 系统对话框类 
		昨天CString()转 Format-(LPCTSTR)_bstr_t
		std::str c_str() CString 
		1
		szTip 托盘提示语 
		shell-* api 外壳操作
		消息协议
		VS添加消息事件 有时候不行
		把类结构和目录 上下放
		2
		新建窗口 
		带LPCSTR 的都是很古老的API
		windows没有父进程 子进程说法？linux有
		启动进程方法
		NULL 黑色的菜单 ShellExecut() 测试各种资源打开
		3
		CEdit类 里面的很多方法 气球tip等 
		模仿着记事本 开发
		GetModify SetModify
		获取矩形 获取选中 文字 等等 
		Set/GetLimitText()
		LineIndex 清空undo ... 
		CString 拆分路径名
		4
		CFile  
		保存功能？
		
	7-06
		记事本功能继续开发
		Prompt没有关联 SelectFile关联 ？ 
		读写文件2种：CreateFile / CFile file
		CFile 的share模式
		UNICODE等字符编码的处理 
		CMainDlg类中 
		保存中的 文件类型 
		const char* p = "aaa"  "bbb"  "ccc";
		3
		4
		设置字体 CFontDialog 
		字体信息结构体 
				
		http://www.cppblog.com/andxie99/archive/2008/06/04/9747.html
		框架图
		
	7-07
		系统设计

		非模式对话框 背景是否可以操作
		
	7-08
		
	7-10
		记事本-可以把对话框很多东西都用到，不错的demo
		回想最开始，分页的处理，那个时候对数据结构可以说完全不熟悉，或者说不知道如何使用，只知道知识点

		_cdel _stdcall 面试题？算常识吧 算不上笔试题 
		看汇编 打断点 进行验证两者的区别！！看看学习方式哈
		看看学习中验证发现和往上查的结论有区别？此时是如何继续求证的？最后还是无法解决，需要对汇编有很高的熟练度 看之前的代码或者换个编译器或者换个版本的编译器
		熟练的看汇编，能否？

		以前的一句话： 面向编译器编程--c++
		不同编译器的处理方式可能大不同 
		编写可移植的c/c++程序

		反射消息 关联变量 之前有点问题我
		跳转第几行 
		调试手段：调用堆栈 很多还是不会
		doModal期间资源存在，前后都没了，如何看出来的，看调用堆栈 
		知识点入门 -> 知识点熟悉 -> 知识点实践 
		想到了windows计数器的demo，有源码的gditub

		传统编译器：前端 优化器 后端
		https://www.zhihu.com/question/29156753/answer/2474547248

		wrap 换行  自动换行 
		跳转可能受自动换行功能的影响
		查找功能 替换功能(区分大小写 颠倒) -最难
		不区分大小写呢？

	7-11
		记事本核心算法 继续 替换查找另存为等功能
		之前那个CString()宽窄的处理就很有场景
		DWORD 昨天从头开始PPT中都有这些整理 或者点进去 (学习整理 实操点进去)
		CString类 还有很多方法的使用 没说到，自己去拓展！！！字符串的操作
		华为限制复杂编程语句
		
		替换算法 搞了好久 加上区分大小写或不区分
		果然子串的处理还是最麻烦的 
		扩展控件 
		另存为 需要设计哈 代码设计的哇
		
	7-12
		1
		另存为？
		2
		彻底完工
		高效学习-拓展-深度 横向 纵向
		3
		？
		分页窗口
		明天还有一天
		计组：https://www.bilibili.com/video/BV1EW411u7th/?spm_id_from=333.337.search-card.all.click&vd_source=3a90c28136589066688d4183d633571f
		4
		分页窗口
		
	7-13
		1
		向导模式 分页模式
		竖着的必须多行 横着不需要
		7章开发控件 
		热追踪 10以上都默认设置了的
		向导模式-就是上一页 下一页按钮 
		调试手段： 调用堆栈！！！必须 比特的调试几集也可以看看
		2
		数值型关联变量 以前是 GetDlgItemInt()获取的 界面和内存的数据进行交换 DDX_
		部分控件可以关联
		分页加上之前的管理系统 就可以了 数据库的设计
		添加资源 win32客户端就是围绕资源来编程的 
		之前写过的管理系统 现在还能无阻碍写出来？ 估计好多API都忘记了把
		三个重要的虚函数 init ok destory
		UpdateData 
		单多选按钮 单选框 复选框 
		内部原理就是 SendMessage!!!win32 重要这个函数，小甲鱼笔记看看 这玩意怎么使用的，之前只是提过一嘴
		BM Button Message 
		
	7-14
		1 昨天的单选框那些
		控件型关联变量 update..
		又是sendMessage win32 很重要这个API 但是没说 自己学
		表单控件 标号 怎么按出来的？
		现在的while循环逻辑 自己还熟悉吗 
		CS架构--多页 
		mysql - tinyint boolean 数据类型 增加表字段了哈 兄弟们
		2 分页 
		3 分页 
		4 分页 兄弟 父子 
		
	7-15
		1. setImageList SendMessage!!!win32 api重要性
		图像列表  class CLimageList :public CObject 主要用类的Add函数 添加图标 还有函数透明的背景色
		int GetImageCount() const; 也用到
		图标的原理 黑白图 灰度图 透明图的原理
		PNG ICON不要混用  
		2. 16*16 调试手段：调用栈 找到出问题的栈 双击进去
		CLsitCtrl 类 类型转换-权限放大缩小 SetItem-设置文字和图标 状态 LVITEM结构体
		Timer事件？
		3. SetItemState    开关|要设置的目的
		可编辑表格 
		
	7-17
		1 继续可编辑表格 
		现在再回想这个需求 感觉好容易实现阿 自己封装轮子都可以了
		跟老师学 跟同学学 跟自己学
		网络通讯完结了
		2 GDI开发 绘图麻 
		第七章 六大GDI对象 
		接口：三方 二方-OS 一方-C/C++
		手 - 眼 +
		HDC -Handle to Device Context 设备上下文句柄   -windows OS概念，其他OS可能有其他的绘图概念
		这个句柄可以用于 绘图 等 
		3 从句柄开始讲起 
		所有控件都是画出来的 -树形控件 
		VS官网 文档，应该是最新的！
		标准绘图 临时绘图 非客户区绘图
		
	7-20
		1  自制控件 使用六大封装类进行开发
		后端开发 和 软件开发 区别
		看调用栈 --调试手动 出错了，点击重试，进入调用栈
		三态按钮 二态按钮 
		CToolTipCtrl类 

		很有收获：
		https://www.bilibili.com/video/BV1S84y147vb/?vd_source=3a90c28136589066688d4183d633571f
		零声： 行业的积累，不仅仅是技术，各种各样的方向都做，否则后期乏力 
		头几年可以接触大量新技术，做几款0-1的产品 
		工程师的5个等级：
			1级. 开创一个产业
			2级. 能设计和实现别人不能做出的产品
			3级. 能独立设计和实现产品并且在市场上获得成功 (大部分人的天花板了 开源 公司 博客等都算)
			4级. 能指导和带领其他人完成更有影响力的工作
			5级. 能独立解决问题，完成工程作业 (0-1就是这个过程的积累) 很可能有人干很多年都没有突破这个阶段 

		这个公司干几年，这个行业干几年，没有行业积累，很容易被后来者年轻人工资倒挂的，不要盲目跳槽 
		在这个过程中，越来越多的工程师被淘汰，工程师--很多人注定要被淘汰 2、8法则 
		这就是积累行业经验了。
		突然想到之前项目经理谈论的 对于公司产品的谈论，和腾讯微信的商业谈判，直接说死，给死我们公司独家代理权 
		也反证明了公司没有门槛，没有形成壁垒，别人很容易切进来
		对于工作的态度，优化迭代，如何做得更好，等 把这个产品打造的更好
		对问题的专研深度 导致技术深度差异 对技术的追求 有自我驱动力的
		技术深度：考虑的全面 长远  代码的可维护性 多种方案的实现比较
		工程师： 解决问题的能力
		技术深度和业务的平衡 
		大部分还是产品的竞争 

		听多了看多了某些负面的东西，反而精神内耗，
		说的没错，我之前就是这种状态，没有意义，面对负面消息，无视即可。
		做好本职工作即可。

		模板参考：幸运儿
		前几年，1-2款，成功产品 1-3年
		上线之后有用户反馈，周而复始，不是领导拍脑袋决定的产品
		3-5年 带领一个团队，负责一个方向 
		5-8年 综合性的团队，手下有团队的具体负责人了，这时候考虑东西就不一样了 前端产品团队 后端团队 多技术团队 
		8年后，跨企业 上下游的资源 跨行业 你就会对这个行业有一定理解 行业的发展趋势 政策 
			你才能根据这些调整自己的产品或技术

		学课程： 60% 学习，40% 总结
		不是为了学技术而学技术 
		零声把所有linux的文章都整理成一个册子，找老师要 

	7-21
		看框架，时刻想起C++语言本身 
		CPen 
		CDC类第二大 CWnd类第一
		http://s9.sinaimg.cn/orignal/001HNxEXzy6PTAzo0VG28 MFC类结构
		
