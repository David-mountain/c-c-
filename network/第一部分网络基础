 1 mac地址和ip地址
 网卡
 适配器就是网卡 网络接口卡 NIC 但是很多人都叫它更简单名字网卡
 通过网卡能够使用不同的计算机之间连接，从而完成数据通信等功能
 WLAN -无线网卡  以太网 -有线网卡  蓝牙也是网卡的一种，只不过是协议不一样
控制面板 - 网络 - 适配器设置 
以太网 - 右键 - 状态 - 详细信息
	物理地址  标识这块网卡的ID 理论是全球唯一的 16禁制-12位  6个字节 8位 48位
	ifconfig linux命令	
		硬件地址就是MAC地址 标识网卡的ID 理论是全球唯一
		MAC地址一般用来标识主机的ID，这个ID是物理地址
		不像我们的虚拟IP是会变的 网卡ID是不变的
IP地址
	是标识主机的ID，这个是虚拟的，会改变的
	以太网-状态-详细信息 IPV4(2^32) V6(128位) 公网有些都是用V6了
	一个IP将其分为子网ID和主机ID 子网ID和主机ID需要和子网掩码一起来看 
	10.1.1.2       ip
	255.255.255.0 子网掩码  netmask 
	ip中被连续的1覆盖的位就是子网id 
	ip中被连续的0覆盖的位就是主机id 

	10.1.1.2        0000 1010  0000 0001  0000 0001  0000 0010
	255.255.255.0   1111 1111  1111 1111  1111 1111  0000 0000
	子网ID： 10.1.1 
	主机ID： 2 
	网段地址： 10.1.1.0 
	广播地址： 10.1.1.255   
		如果是广播地址这个IP发来的，所有电脑无条件接收 
	如果你给一台主机设置IP，有两个IP不能用的，网络地址和广播地址 .0 .255不能设置的
	10.1.1.1 - 10.1.1.254   2^8-2 = 254 
	我好奇这个子网掩码是怎么来的？

	192.168.1.23/24(255.255.255.0)
	24代表前面是24个1 
	这个子网ID： 192.168.1 
	主机ID： 23 

	192.168.1.2
	255.255.0.0 
	子网ID： 192.168.0.0
	主机ID： 1.2 
	16位 最多可容纳多少台主机呢？ 16位 2^16-2  192.168.0.0 192.168.255.255不能用 

	学计算机，IP都不会设置，丢人了哈

	IP地址 4个字节 32位
	MAC地址 6个字节 48位
	IPV6 128位 16个字节 

	ipconfig 
		MTU: 1500 最多能接收1500个字节
		lo 本地回环 
			inet 地址： 127.0.0.1 这个ID其实也是你本主机的ID
			如果你ping 127.0.0.1  ping什么意思？ping一个命令，用来测试两台主机的网络连通性
			视频中这没有ping同学的 防火墙问题没关，然后又 ping网关 以太网-详细信息-默认网关 192.168.11.1 
			网关其实也是一个网卡，给他设置了一个IP 
			ping 自己了 

			127.0.0.1 回环地址 如果你在这台主机里面使用这个IP，就是代表你自己
			127.0.0.1 - 127.255.255.254 这个范围内都是回环IP ？？这么多 127.开头的
			测试本地网络是否好坏 

	子网ID不同的网络不能直接通信，如果要通信则需要路由器转发
	主机ID全为0的IP地址表示网段地址
	主机ID全为1的IP地址表示该网段的广播地址

	IP地址分类：A类广域网 城域网 局域网 
	A类地址：默认8bit子网ID，第一位是0  问：这个的子网ID是多少？２５５．０．０．０
	Ｂ：１６ｂｉｔ　
	ｃ：２４ｂｉｔ　
	．．．

	子网掩码要么前面是连续的１　或者　后面是连续的０　不能是中间　２５５．２５５．０．２５５　不对

	设置IP：　以太网－属性－V4协议　
		默认是自动的，可自己设置　

	网关，你要访问外网的时候，你要经过网卡，这个网卡的IP你要告诉它
	ｌｉｎｕｘ；　ｉｐｃｏｎｆｉｇ　（这里可拿到网卡名字）
	ｉｆｃｏｎｆｉｇ　网卡名字ｅｎｓ３３　１９２．１６８．１３１．１３３　ｎｅｔｍａｓｋ　２５５．２５５．２５５．０　
	ｕｂｕｎｔｕ也可图形化设置　不用终端　


	桥接模式：　相当于虚拟机直接和本局域网相连，和你的PC机同一个网段　也要一个网段的IP　
	NAT模式：　只和你的PC通信，中间架设一个虚拟的网络，通过这个通信


２　桥接和ｎｅｔ
ubuntu - 网络设置 - 以太网 有线连接 编辑
桥接： 也有一个单独的IP，可以单独和局域网内其他主机通信
NAT： 虚拟机，又虚拟了一个局域网，可能是其他网段的， 就虚拟出一块网卡，192.168.131.1 
	只有windows主机能跟其他局域网通信，虚拟的这个不行
	windows主机 192.168.21.1
		192.168.131.1 虚拟网卡
		192.168.131.0 虚拟网关  
		192.168.131.2 ubuntu主机跑 
	有副图。
	你要和局域网内其他主机通信，你就要设置成桥接模式

3 端口
用来标识应用程序(进程)
每个应用程序都有一个端口的，用于区分
每个进程有个缓冲区的，本质上端口用于区分这个读写缓冲区的
问：为什么不用进程号标识，而用端口来标识？
  每次启动的时候，进程号都在变，无法确定。 所以，端口需要固定下来。

port: 2个字节 0-65536 无符号短整型的类型
0-1023 知名端口 FTP-21 HTTP-80
自定义端口 1024-65536 
netstat 
端口不能重复 一个程序可以有多个端口(QQ开多个)，一个端口不能标识多个程序

4 网络分层 
OSI7层模型 
TCP/IP协议簇
为了减少协议设计的复杂性，大多数网络模型均采用分层的方式来组织
OSI参考模型
 应用层		  拿到这个数据
 表示层		  解码 解压缩
 会话层  	  建立连接 
 传输层		  port 区分数据递送到哪一个应用程序
 网络接口层	  ip 给两台主机提供路径选择
 数据链路层    mac 负责收发数据
 物理层        双绞线接口类型，光纤的传输速率等
 (物数网传会表应)

TCP/IP模型
 应用层(OSI上三层)  应用程序    FTP-文件传输协议 Telnet-  
 传输层			   进程到进程  TCP-传输控制协议 UDP-用户数据报协议 
 网络层  		   主机到主机  IP-英特网互联协议 ICMP-因特网控制报文协议(ping命令等就是这个协议) IGMP-因特网组管理协议
 链路层 (OSI下两层) 设备到设备  ARP-地址解析协议(通过IP找MAC地址) RARP-(通过MAC找IP)
 (链网传应)

有副图。
发-从上往下 收-从下往上

协议： 规定了数据传输的方式和格式
组包(做底层 黑客阿) 解包 

然后具体每个协议的格式！！！！我觉得很重要
UDP报头(8byte) TCP报头(20byte) 
IP报头(20byte) TTL(转发经过一个路由器 就减少1 直接为0 就不转发了，这个包就丢了)
MAC头(14byte)
ARP报头

6 网络通信过程
组包 解包 
局域网多用UDP(效率高点) 跨网关跨路由器用TCP(有个确认机制)
链路层要加个MAC头 

A
192.168.1.1/24 01:02:03:04:05:06(mac地址) 

B
192.168.1.2/24 0a:0b:0c:0d:0e:0f(mac地址) 

用纸笔写哈，具体过程后面再看视频

7 ARP通信
地址解析协议 通过IP找MAC地址

路由器有两种孔(LAN WAN)， 有两块网卡，一是网关(也是网卡)，二是叫外网网卡(wan)
LAN 连接主机的
命令： arp -a 查看MAC地址

ARP广播，谁是。。。？收到之后哪个谁谁谁就会发过来MAC地址
同一个局域网的，就是这样的，如果不是同一个局域网呢？

就会给网关(一般是最小那个IP或者最大那个)，再通过外网网卡，
ARP头部 不管什么报，前面的以太网头部不能少的？
！！！ ARP头部-14个字节 报文28个字节
ARP具体 看视频
记住这个是 通过IP找MAC 的目的哈 
然后这个ARP广播，所有人都能收到，但是只有数据中的那个IP才会应答。


8 网络设计模式
以太网封装-- ！！！
以太网帧格式 ？ 

B/S browser/server 浏览器 网页，和服务器通信，QQ斗地主网页版和服务器通信
C/S client/server 英雄联盟-要下来一个客户端，然后和服务器通信
B/S 浏览器 基本都是服务器计算好再传给浏览器，如果很大几个亿，都让服务器计算则压力大
	  性能低，大型游戏玩不了，客户端安全，开发周期短  
	  必须走HTTP协议，浏览器麻 
C/S 大型游戏都是这个模式，本地计算，性能较好，但是客户端容易篡改数据 开发周期较长 任意协议

主要写C/S
主要写一个高并发几十万个的请求，多进程多线程可以实现并发，无法实现高并发，一个程序最多可以开多少个线程？


